{"version":3,"sources":["App.module.css","redux/contacts/contact-actions.js","redux/contacts/contact-reducer.js","redux/store.js","redux/contacts/contact-selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","exportModule","handleAddContact","createAction","name","number","payload","id","shortid","generate","handleRemoveContact","handleFilterChange","items","createReducer","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","persistor","persistStore","getItems","getVisibleContacts","normalizedFilter","getFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChangeForm","e","currentTarget","value","validatedForm","isExistContact","find","alert","onSubmit","preventDefault","className","s","inputForm","dataInput","type","placeholder","onChange","addContact","ContactListItem","onClick","ContactsList","map","Filter","target","App","titleSections","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ef7a85d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSections\":\"App_titleSections__3YIYm\"};","import { createAction } from '@reduxjs/toolkit'\r\nimport shortid from 'shortid'\r\n\r\nconst handleAddContact = createAction(\"app/handleAddContact\", (name, number) => ({\r\n  payload: { id: shortid.generate(), name, number },\r\n}));\r\n\r\nconst handleRemoveContact = createAction(\"app/handleRemoveContact\");\r\nconst handleFilterChange = createAction(\"app/handleFilterChange\");\r\n\r\nconst exportModule = {\r\n  handleAddContact,\r\n  handleRemoveContact,\r\n  handleFilterChange,\r\n};\r\n\r\nexport default exportModule;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contact-actions';\r\n\r\nconst initialState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer(initialState, {\r\n    [actions.handleAddContact]: (state, { payload }) => [...state, payload],\r\n    [actions.handleRemoveContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.handleFilterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n});;","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contact-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter']\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nconst exportModule = { store, persistor };\r\nexport default exportModule;\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getItems(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport actions from '../../redux/contacts/contact-actions';\r\nimport {getItems} from '../../redux/contacts/contact-selectors'\r\nimport s from './ContactForm.module.css'\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeForm = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isValidatedForm = validatedForm();\r\n    if (!isValidatedForm) return;\r\n    dispatch(actions.handleAddContact(name, number));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const validatedForm = () => {\r\n    if (!name || !number) {\r\n      alert(\"Some filed is empty\");\r\n      return;\r\n    }\r\n      const isExistContact = !!contacts.find(contact => contact.name === name);\r\n    isExistContact && alert(\"Contact is already exist!\");\r\n    \r\n      return !isExistContact;\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className={s.inputForm}>\r\n          <h3 className={s.dataInput}>Name</h3>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={handleChangeForm}\r\n          />\r\n          <h3 className={s.dataInput}>Number</h3>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter phone number\"\r\n            value={number}\r\n            onChange={handleChangeForm}\r\n          />\r\n          <div>\r\n            <button className={s.addContact} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport actions from '../../redux/contacts/contact-actions'\r\nimport {getVisibleContacts} from '../../redux/contacts/contact-selectors'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ContactListItem = ({\r\n  contact: { id, name, number},\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <li>\r\n      {name}: {number}{\" \"}\r\n      <button onClick={() => dispatch(actions.handleRemoveContact(id))}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactsList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  on: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\nimport Filter from \"./components/Filter\";\nimport s from './App.module.css'\n\n\nexport default function App() {\n  return (\n    <>\n      <h1 className={s.titleSections}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.titleSections}>Contacts</h2>\n      <p>Find contacts by name</p>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from \"./redux/store.js\";\nimport './index.css';\nimport App from './App';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading = {null} persistor = {store.persistor}>\n      <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"ContactForm_inputForm__3wVLr\",\"dataInput\":\"ContactForm_dataInput__1OxO0\",\"addContact\":\"ContactForm_addContact__-tgtL\"};"],"sourceRoot":""}